services:

  mysql:
    image: mysql
    restart: always
    container_name: mymysql
    env_file:
      - ./.env
    volumes:
       - ./test-init.sql:/docker-entrypoint-initdb.d/test-init.sql
       - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=${ROOT_PASSWORD}
      - MYSQL_DATABASE=notifier_test
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=testpass
    ports:
      - "3306:${PORT_MYSQL}"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - docker-network
    profiles:
      - test
      - dev

  bot:
    build: .
    container_name: tele-bot
    ports:
      - "8000:${PORT_BOT}"
    networks:
      - docker-network
    env_file:
      - ./.env
    depends_on:
      - mysql
    profiles:
      - dev

  check-db-started:
      image: jwilder/dockerize:0.6.1          
      depends_on:
         - mysql          
      command: 'dockerize -wait=tcp://mysql:3306 -timeout 30s'
      networks:
        - docker-network

  test-bot:
    build: 
      context: .
      dockerfile: Dockerfile.test
    container_name: test-bot
    networks:
      - docker-network
    env_file:
      - ./.env
    ports:
      - "8000:${PORT_BOT}"
    depends_on:
      check-db-started:
        condition: service_completed_successfully  
    profiles:
      - test
    
      
networks:
  docker-network:
